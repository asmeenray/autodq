name: tests
on: [push]
jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: Create Docker Compose configuration file
              run: |
                  echo "POSTGRES_DB=mobydq" >> ./.env
                  echo "POSTGRES_USER=postgres" >> ./.env
                  echo "POSTGRES_PASSWORD=change_me" >> ./.env
                  echo "GRAPHQL_DATABASE_URL=postgres://postgres:change_me@db:5432/mobydq" >> ./.env
                  echo "GRAPHQL_PORT=5433" >> ./.env
                  echo "GRAPHQL_SECRET_KEY=change_me" >> ./.env
                  echo "MAIL_HOST=smtp.server.org" >> ./.env
                  echo "MAIL_PORT=25" >> ./.env
                  echo "MAIL_SENDER=change_me@change_me.com" >> ./.env
                  echo "MAIL_PASSWORD=change_me" >> ./.env
                  echo "MAIL_BASE_URL=https://localhost" >> ./.env

            - name: Build application Docker images
              run: docker-compose -f docker-compose.yml build db graphql scripts

            - name: Run application Docker containers
              run: docker-compose -f docker-compose.yml up -d db graphql
            
            - name: List Docker containers
              run: docker ps -a

            #db-cloudera, db-sql-server
            - name: Build test Docker images
              run: >-
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml build
                  db-mariadb
                  db-mysql
                  db-postgresql
                  test-scripts
                  test-lint-python

            - name: List Docker images
              run: docker images

            - name: Run Docker containers to test database functions
              run: |
                export TEST_CASE=test_db.TestDb
                export TEST_HOST=
                export TEST_PORT=
                docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from test-scripts test-scripts

            - name: Run Docker containers to test batch methods
              run: |
                  export TEST_CASE=test_scripts.test_batch
                  export TEST_HOST=
                  export TEST_PORT=
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from test-scripts test-scripts

            - name: Run Docker containers to test data source methods
              run: |
                  export TEST_CASE=test_scripts.test_data_source.TestDataSource.test_get_password
                  export TEST_HOST=
                  export TEST_PORT=
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from test-scripts test-scripts

            #- name: Run Docker containers to test data source connectivity to Cloudera Hive
            #  run: |
            #      export TEST_CASE=test_scripts.test_data_source.TestDataSource.test_get_connection_cloudera_hive
            #      export TEST_HOST=db-cloudera
            #      export TEST_PORT=10000
            #      docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d $TEST_HOST
            #      docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from test-scripts test-scripts
            #      docker-compose -f docker-compose.yml -f docker-compose.test.yml stop $TEST_HOST
            #      docker-compose -f docker-compose.yml -f docker-compose.test.yml rm -f $TEST_HOST

            - name: Run Docker containers to test data source connectivity to MariaDB
              run: |
                  export TEST_CASE=test_scripts.test_data_source.TestDataSource.test_get_connection_mariadb
                  export TEST_HOST=db-mariadb
                  export TEST_PORT=3306
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d $TEST_HOST
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from test-scripts test-scripts
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml stop $TEST_HOST
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml rm -f $TEST_HOST

            - name: Run Docker containers to test data source connectivity to MySQL
              run: |
                  export TEST_CASE=test_scripts.test_data_source.TestDataSource.test_get_connection_mysql
                  export TEST_HOST=db-mysql
                  export TEST_PORT=3306
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d $TEST_HOST
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from test-scripts test-scripts
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml stop $TEST_HOST
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml rm -f $TEST_HOST

            - name: Run Docker containers to test data source connectivity to PostgreSQL
              run: |
                  export TEST_CASE=test_scripts.test_data_source.TestDataSource.test_get_connection_postgresql
                  export TEST_HOST=db-postgresql
                  export TEST_PORT=5432
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d $TEST_HOST
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from test-scripts test-scripts
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml stop $TEST_HOST
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml rm -f $TEST_HOST

            - name: Run Docker containers to test data source connectivity to SQLite
              run: |
                  export TEST_CASE=test_scripts.test_data_source.TestDataSource.test_get_connection_sqlite
                  export TEST_HOST=
                  export TEST_PORT=
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from test-scripts test-scripts

            #- name: Run Docker containers to test data source connectivity to SQL Server
            #  run: |
            #      export TEST_CASE=test_scripts.test_data_source.TestDataSource.test_get_connection_sql_server
            #      export TEST_HOST=db-sql-server
            #      export TEST_PORT=1433
            #      docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d $TEST_HOST
            #      docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from test-scripts test-scripts
            #      docker-compose -f docker-compose.yml -f docker-compose.test.yml stop $TEST_HOST
            #      docker-compose -f docker-compose.yml -f docker-compose.test.yml rm -f $TEST_HOST

            - name: Run Docker containers to test indicator methods
              run: |
                  export TEST_CASE=test_scripts.test_indicator
                  export TEST_HOST=db-postgresql
                  export TEST_PORT=5432
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d $TEST_HOST
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from test-scripts test-scripts
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml stop $TEST_HOST
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml rm -f $TEST_HOST

            - name: Run Docker containers to test session methods
              run: |
                  export TEST_CASE=test_scripts.test_session
                  export TEST_HOST=
                  export TEST_PORT=
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from test-scripts test-scripts

            - name: Run Docker containers to test utility methods
              run: |
                  export TEST_CASE=test_scripts.test_utils
                  export TEST_HOST=
                  export TEST_PORT=
                  docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from test-scripts test-scripts

            #- name: Run python linter
            #  run: docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from test-lint-python test-lint-python
